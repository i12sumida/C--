% 
% $Id$
%
\section{入出力装置}

\subsection{I/Oマップ}
\label{app:iomap}

\cmml の in、out 関数でアクセスする I/O マップを以下に掲載します。
I/O アドレスは 16 ビットで指定しますが、
\tac のハードウェアは下位 8 ビットしかアドレスデコードしていません。
使用できるのは 0000H 〜 00FFH までの 256 アドレスです。

\begin{center}
{\bf \tac のI/Oマップ} \\
\begin{tabular}{|c|l|l|}
\hline
\lw{アドレス} & \multicolumn{2}{|c|}{内 容}            \\
\cline{2-3}
            & \multicolumn{1}{|c}{in} & \multicolumn{1}{|c|}{out}  \\
\hline
{\tt 0000H} & SIO In Data          & SIO Out Data       \\
\hline
{\tt 0001H} & SIO Status           & SIO Control        \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 0004H} & PS2 In Data          & PS2 Out Data       \\
\hline
{\tt 0005H} & PS2 Status           & PS2 Control        \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 0008H} & Timer Control        & Timer Control      \\
\hline
{\tt 0009H} & Timer Interval 0     & Timer Interval 0   \\
\hline
{\tt 000AH} & Timer Interval 1     & Timer Interval 1   \\
\hline
{\tt 000BH} & Timer Interval 2     & Timer Interval 2   \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 0020H} & ATA Reset            & ATA Reset          \\
\hline
{\tt 0021H} & ATA PIO Mode         & ATA PIO Mode       \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 002EH} & ATA Alternate Status & ATA Device Control \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 0030H} & ATA Read Data        & ATA Write Data     \\
\hline
{\tt 0031H} & ATA Error            & ATA Features       \\
\hline
{\tt 0032H} & ATA Sector Count     & ATA Sector Count   \\
\hline
{\tt 0033H} & ATA Sector Number    & ATA Sector Number  \\
\hline
{\tt 0034H} & ATA Cylinder Low     & ATA Cylinder Low   \\
\hline
{\tt 0035H} & ATA Cylinder High    & ATA Cylinder High  \\
\hline
{\tt 0036H} & ATA Device/Head      & ATA Device/Head    \\
\hline
{\tt 0037H} & ATA Status           & ATA Command        \\
\hline
{\tt ...  } & ...                  & ...                \\
\hline
{\tt 00FFH} &                      &                    \\
\hline
\end{tabular}
\end{center}

\subsection{シリアル入出力インタフェース}
\label{app:sio}

調歩同期方式のシリアル入出力インタフェースです。
通信方式は、全2重方式、9600ボー、データビット長8ビット、
ストップビット1ビット、パリティビットなしに固定されており、
初期化の必要がありません。
送信、受信に対応した2種類の割込みを発生することができます。

\subsubsection{SIO In Data レジスタ}

シリアル通信回線から受信したデータはシリアルパラレル変換された後、
1バイトの受信バッファに記憶されます。
SIO In Data レジスタは、この受信バッファのことです。
このレジスタから受信データを読出すことができます。

\begin{center}
%{\bf SIO In Data レジスタ} \\
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 8     &  --                        & 上位8ビットは常時 0 になります。\\
\hline
7 - 0      &  受信データ                & 下位8ビットが受信データです。\\
\hline
\end{tabular}
\end{center}

\subsubsection{SIO Out Data レジスタ}

シリアル通信回線へ送信するデータを書き込むレジスタです。
このレジスタは1バイトの送信バッファの役割りをします。
このレジスタに書き込まれたデータは、
パラレルシリアル変換のためのシフトレジスタが空になったら、
シフトレジスタに転送されます。
この時点でこのレジスタに次のデータを書き込める状態になります。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 8     &  --                        & 上位8ビットは無視されます。\\
\hline
7 - 0      &  送信データ                & 下位8ビットが送信データです。\\
\hline
\end{tabular}
\end{center}

\subsubsection{SIO Status レジスタ}

SIO In Data レジスタにデータがあるか、
SIO Out Data レジスタが空になったかを調べるためのレジスタです。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 8     &  --                        & 上位8ビットは常時 0 になります。\\
\hline
7          &  送信可能                  & \parbox{6.0cm}{
\vspace{0.2cm}
このビットが1のとき SIO Out Data レジスタに
次の送信データを書き込むことができます。
SIO Out Data レジスタにデータを書き込むと0に変化します。
書き込まれたデータがシフトレジスタに転送され、
次の送信データを書き込み可能になると再度1に変化します。
\vspace{0.2cm}
}        \\
\hline
6          &  受信データあり            & \parbox{6.0cm}{
\vspace{0.2cm}
このビットが1のとき SIO In Data レジスタに
受信済みのデータがあります。
SIO In Data レジスタから値を読み込むと0に変化します。
次のデータを受信すると再度1に変化します。
\vspace{0.2cm}
}        \\
\hline
5 - 0      &  --                        & 下位6ビットは常時 0 になります。\\
\hline
\end{tabular}
\end{center}

\subsubsection{SIO Control レジスタ}

シリアル入出力インタフェースからの割込みの許可不許可を切替えます。
このレジスタを使用し割込みを許可し、
更に、 EI 命令を使用して CPU を割込み可能状態すると
割込みが発生するようになります。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 8     &  --                        & 上位8ビットは無視されます。\\
\hline
7          &  送信割込み許可            & \parbox{6.0cm}{
\vspace{0.2cm}
このビットに1を書き込むと送信割込みが許可されます。
SIO Out Data レジスタに次のデータを書き込み可能になると割込みが発生します。
次の送信データを SIO Out Data レジスタに書き込むことで割込みは解除されます。
\vspace{0.2cm}
}        \\
\hline
6          &  受信割込み許可            & \parbox{6.0cm}{
\vspace{0.2cm}
このビットに1を書き込むと受信割込みが許可されます。
SIO In Data レジスタに受信データが準備できると割込みが発生します。
受信データを SIO In Data レジスタから読出すことで割込みは解除されます。
\vspace{0.2cm}
}        \\
\hline
5 - 0      &  --                        & 下位6ビットは常時 0 になります。\\
\hline
\end{tabular}
\end{center}

\subsection{キーボードインタフェース}

PS/2 キーボード用のインタフェース回路です。
キーボードからスキャンコードを受信します。
スキャンコードはどのキーが「押下された／解放された」かを認識できるコードです。
シフトキーやコントロールキーの操作も
キーボードからスキャンコードとして受信します。

キーボードへコマンドコードを送信することもできます。
コマンドコードはキーボードの LED の点灯／消灯や、
キーボードの接続確認をするためのものです。

\subsubsection{PS2 In Data レジスタ}

キーボードから受信したスキャンコードを読み出すためのレジスタです。
接続先がキーボードになっていることを除き、
SIO In Data レジスタと同様な使い方をします。

\subsubsection{PS2 Out Data レジスタ}

キーボードへ送信するコマンドコードを書き込むためのレジスタです。
接続先がキーボードになっていることを除き、
SIO Out Data レジスタと同様な使い方をします。

\subsubsection{PS2 Status レジスタ}

PS2 In Data レジスタにスキャンコードが届いているか、
PS2 Out Data レジスタに次のコマンドコードが書き込み可能か
調べるためのレジスタです。
ビット構成や意味は SIO Status レジスタと同様なので詳細は省略します。

\subsubsection{PS2 Control レジスタ}

PS2 キーボードインタフェースからの割込みを制御するためのレジスタです。
ビット構成や意味は SIO Control レジスタと同様なので詳細は省略します。

\subsection{タイマー}

3本のインターバルタイマーです。
チャンネル0、チャンネル1は、
10マイクロ秒から655,350マイクロ秒の間隔で割込みを発生することができます。
チャンネル2は、
1ミリ秒から65,535ミリ秒の間隔で割込みを発生することができます。

\subsubsection{Timer Control レジスタ}

3本のインターバルタイマーの割込み許可／不許可を切り替えます。
このレジスタは読み出すこともできます。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 3     &  --                        & 上位13ビットは使用しません。\\
\hline
2          &  チャンネル2割込み許可     & チャンネル2の割込み発生を許可する \\
\hline
1          &  チャンネル1割込み許可     & チャンネル1の割込み発生を許可する \\
\hline
0          &  チャンネル0割込み許可     & チャンネル0の割込み発生を許可する \\
\hline
\end{tabular}
\end{center}

\subsubsection{Timer Interval レジスタ}

3つのチャネルに対応して、3本の Timer Interval レジスタがあります。
Timer Interval レジスタにはタイマーの割込み間隔をセットします。
このレジスタは読み出すこともできます。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 0     & 割込み間隔  & 単位は10マイクロ秒(チャネル0、1の場合)    \\
           &             & 単位は1ミリ秒(チャネル2の場合)            \\
\hline
\end{tabular}
\end{center}

\subsection{マイクロドライブインタフェース}

名称が ATA で始まるレジスタはマイクロドライブインタフェース回路のレジスタです。
その中で、ATA Reset レジスタと ATA PIO Mode レジスタだけが
\tac 独自のレジスタです。
他のレジスタは、
True IDE モードで接続されたマイクロドライブ(またはコンパクトフラッシュ)の
ATA レジスタです。
ATA レジスタの使用方法に付いては、
市販の書籍等を参考にしてください。
ここでは、ATA Reset レジスタと ATA PIO Mode レジスタだけ説明します。

なお、True IDE モードでは DMA がサポートされないため、
本インタフェース回路では DMA を使用することができません。

\subsubsection{ATA Reset レジスタ}

このレジスタをアクセスするとマイクロドライブにハードウェアリセットがかかります。
書き込む／読み出すデータに意味はありません。
ハードウェアリセットを実行すると、
25 マイクロ秒の期間 CPU に wait 信号が入力されます。
その間、CPU が停止するので注意が必要です。

(この仕様は近い将来、変更される予定です。)

\subsubsection{ATA PIO Mode レジスタ}

本インタフェース回路は、
IDE の PIO Mode 0、1、2、3、4 をサポートしています。
どの PIO Mode を使用するか、このレジスタの下位3ビットで指定します。

\begin{center}
\begin{tabular}{|c|l|l|}
\hline
ビット番号 & \multicolumn{1}{|c|}{名称} & \multicolumn{1}{|c|}{説明} \\
\hline
15 - 3     &  --          & 上位13ビットは使用しません。\\
\hline
2 - 0      &  PIO Mode    & 0 から 4 の PIO モードを書き込みます。\\
\hline
\end{tabular}
\end{center}
